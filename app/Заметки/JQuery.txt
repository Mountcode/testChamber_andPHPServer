***************************************

JQUERY

***************************************

Вместо:
$(document).ready(function(){
})
Надо писать
$(function(){

})
****************************************
Не нужно вешать события просто //click
Подвешивай их через on
variable.on('click',function(){
})

****************************************
Шпаргалка JQuery
http://jquery.page2page.ru/tags/ifr.html

****************************************
Сброс цепочки анимации через функцию stop
$(this).stop(true).fadeIn(300).fadeOut(300).fadeIn(300).fadeOut(300).fadeIn(300)
так она не будет запускаться столько раз сколько кликнулит а только 1 раз.
****************************************
Короткая запись "переключить класс у массива только у активного элемента"
$('.menu a").removeClass('active).filter(this).addClass('active');

*****************************************
Как правильно написать JQuery плагин

это первоночальная структура плагина:
(function($){
    $.fn.ИМЯ ПЛАГИНА = function(){
        Код плагина
        
        return this;
    }
})(JQuery)

Любой плагин должен работать с объектом JQuery который может быть как дом элементом так и массивом а значить всё что мы туда передаем нужно обходить циклом. Правильный код такой

(function($){
    $.fn.ИМЯ ПЛАГИНА = function(){
        this.each(function(){
            Код плагина
        })
        
        return this;
    }

})(JQuery)

Так же этот плагин должен быть объектом дял передачи параметром. Надо делать так

(function($){
    $.fn.ИМЯ ПЛАГИНА = function(settings){
       
       //делаем массив options. сливаем его вместе с массивом settings куда и 
       //передаем набор параметров. Запись $.extend берет из второго массива значение по умолчанию ЕСЛИ первым массивом (массивом пользовательских параметров) мы не передали такое значение. Кароче массив со значениями по //умолчанию которые используются если не передат ьсвои
       
        var options = $.extend(settings,{
            'd' : ' ',
            cnt: 2
        });
         
        this.each(function(){
            Код плагина
        })
        
        return this;
    }

})(JQuery)


AJAX

$(...).load - подгрузить в html-элемент данные с сервера
$.get       - выполнить get-зaпрос на сервер
$.post      - выполнить post-зaпрос на сервер
$.ajax      - выполнить любой запрос на сервер с тонкой настройкой

Пример простого AJAX запроса

$.post(урл до файла php, данные, тип данных для колбека)

$.post('php/scripts.php',{name: '1',phone: '88',email: 'erer@er'}, function(data){
    console.log(data);
});


serialize() - функция создания и переработки в массив данных из формы для AJAX

$form.serialize();

let form = $('.fomrd');
let res = $('.result');

$.post('php/scripts.php',form.serialize(), function(data){
    console.log(data);
    if(data == '1'){
        res.html("Заявка отправлена");
    }
    else{
        res.html(data);
    }
});

/////////////=======================/////////////////////
/////////////=======================/////////////////////
